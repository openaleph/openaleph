services:
  postgres:
    image: postgres:10.0
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: ghcr.io/openaleph/aleph-elasticsearch:latest
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  redis:
    image: redis:alpine
    command: [ "redis-server", "--save", "3600", "10" ]
    volumes:
      - redis-data:/data

  ingest:
    image: ghcr.io/openaleph/ingest-file:${ALEPH_TAG:-5.0.2}
    tmpfs:
      - /tmp:mode=777
    volumes:
      - archive-data:/data
    depends_on:
      - postgres
      - redis
    restart: on-failure
    env_file:
      - aleph.env

  worker:
    image: ghcr.io/openaleph/openaleph:${ALEPH_TAG:-5.0.2}
    command: aleph worker
    restart: on-failure
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - ingest
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
    env_file:
      - aleph.env

  shell:
    image: ghcr.io/openaleph/openaleph:${ALEPH_TAG:-5.0.2}
    command: /bin/bash
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - ingest
      - worker
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - "./mappings:/aleph/mappings"
      - "~:/host"
    env_file:
      - aleph.env

  api:
    image: ghcr.io/openaleph/openaleph:${ALEPH_TAG:-5.0.2}
    expose:
      - 8000
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - worker
      - ingest
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
    env_file:
      - aleph.env

  ui:
    image: ghcr.io/openaleph/aleph-ui:${ALEPH_TAG:-5.0.2}
    depends_on:
      - api
    ports:
      - "8080:8080"

volumes:
  archive-data: {}
  postgres-data: {}
  redis-data: {}
  elasticsearch-data: {}
